/*
 * subset.cpp
 *
 *  Created on: Jun 11, 2014
 *      Author: Lexie
 */
#include<algorithm>
#include<vector>
#include<iostream>
#include<cstdio>

using namespace std;

void subsets_helper(vector<int> &s, int cIndex, vector<int> cRet, vector<vector<int> > ret){
	for(int i=cIndex; i<s.size(); i++){
		copy(cRet.cbegin(), cRet.cend(), ostream_iterator<int>(cout, ","));
        cRet.push_back(s[i]);
         ret.push_back(cRet);
         if(i<s.size()-1)
            subsets_helper(s, i+1, cRet, ret);
         cRet.pop_back();
	}
}

vector<vector<int> > subsets(vector<int> &s){
      vector<vector<int> > ret;
      vector<int> cRet;
      if(s.size()==0) return ret;
      ret.push_back(cRet);
      cout<<"begin";
      sort(s.begin(), s.end());
      cout<<"hello";
      subsets_helper(s, 0, cRet, ret);
      return ret;
 }

int main(){
      vector<int> test;
      test.push_back(1);
      test.push_back(2);
      test.push_back(3);
      vector<vector<int> > ret=subsets(test);
      cout<<ret[0][0]<<"e";
}




